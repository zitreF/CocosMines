plugins {
    id 'java'
    id 'maven-publish'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
    id("xyz.jpenilla.run-paper") version "1.0.6"
}

group = 'me.cocos'
version = '1.9-SNAPSHOT'

compileJava.options.encoding = 'UTF-8'

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

repositories {
    mavenCentral()
    maven { url = uri("https://repo.papermc.io/repository/maven-public/") }
    maven {
        name = "spigotmc-repo"
        url = "https://hub.spigotmc.org/nexus/content/repositories/snapshots/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven { url 'https://jitpack.io' }
}

dependencies {
    compileOnly "org.spigotmc:spigot-api:1.16.5-R0.1-SNAPSHOT"
    implementation 'com.github.zitreF:CocosMenu:2.5.2'
    compileOnly 'com.github.decentsoftware-eu:decentholograms:2.8.3'
    implementation(platform("com.intellectualsites.bom:bom-1.16.x:1.28"))
    compileOnly("com.fastasyncworldedit:FastAsyncWorldEdit-Core")
    compileOnly("com.fastasyncworldedit:FastAsyncWorldEdit-Bukkit")
}

def targetJavaVersion = 17
sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.release = 17
}

java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(17))
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

tasks {
    runServer {
        minecraftVersion("1.18.2")
    }
}

publishing {
    publications {
        maven(MavenPublication) {
            groupId = 'me.cocos'
            artifactId = 'mines'
            version = '1.9-SNAPSHOT'

            from components.java
        }
    }
    repositories {
        mavenLocal()
    }
}